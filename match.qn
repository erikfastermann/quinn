defop "&&" x y {
	if x {
		y ()
	} {
		false
	}
}

match = ([x exprs] -> {
	i = mut 0
	each case (lit exprs) {
		prev = load i
		i <- (prev + 1)
		if (((prev %% 2) == 0) && {(case @ 0) x}) {
			if ((len case) == 1) {
				((exprs @ (prev+1)) ())
			} {
				([(case@1)] -> (exprs @ (prev+1))) x
			}
		}
	}
})

some = ([x] -> {
	if x { true } { false }
})

none = ([x] -> {
	if x { false } { true }
})

println (match 1 [
	[some x] { x + 41 }
	[none] { 456 }
])
